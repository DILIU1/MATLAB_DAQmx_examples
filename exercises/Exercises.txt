



* Digital output 

Hint: If you get stuck with the following do: "edit vidrio.DO.softwareBasic.m"

At the command line:


1) Create an instance of an NI task with the task name "TENSS"
   Verify that the "taskName" property is the string "TENSS"

2) Use dabs.ni.daqmx.System to figure out the device names of the attached NI devices

3) Create a digital output channel on port 0, line 3. 

4) If you are using a PCI DAQ with an external breakout box: connect port 0, line 3 to "User 1" with a wire. 
Then connect the BNC output labeled "User 1" to channel 1 of an oscilloscope. 
If you are using a USB DAQ, connect connect port 0, line 3 to an oscilloscope. 


5) Use the "writeDigitalData" method to set the digital output line high and low and monitor this with the oscilloscope. 

6) use the "delete" command to close the connection to the device. 



* Analog input
Use vidrio.AI.hardwareContinuousVoltageWithCallBack to read in a photodiode signal and plot it to screen.
Read through the code and get an understand of what each line is doing. 



* Analog Output
Open  AOexercise.m and complete all lines which end with "% <====""
Run the command once you're done and monitor the output on an oscilloscope to confirm it works.

In the above function, the waveform begun being played out as soon as the "start" method was run. 
Let's make it start on a trigger.

1) Modify the above code using the cfgDigEdgeStartTrig method such that it will start when port "PFIO" goes from low to high. 
2) Start your modified AOexercise.m and trigger the waveform by shorting PFI0 to the +5V terminal of the DAQ or the +5V line from an Arduino. 

